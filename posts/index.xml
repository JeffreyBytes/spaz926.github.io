<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jeffrey Carpenter</title>
    <link>https://uvolabs.me/posts/</link>
    <description>Recent content in Posts on Jeffrey Carpenter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Mar 2019 15:05:45 -0600</lastBuildDate>
    
	<atom:link href="https://uvolabs.me/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>100 Days of Swift: Day 9</title>
      <link>https://uvolabs.me/posts/100-days/day-9/</link>
      <pubDate>Thu, 07 Mar 2019 15:05:45 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-9/</guid>
      <description>Day 9 marks the very end of Project 1 with a review and a few challenges to complete. The review was 12 multiple choice questions of which I aced. The challenges are laid out below.
 Use Interface Builder to select the text label inside the table view cell and adjust its font size to something larger. In the main table view, show the image names in sorted order. Rather than show the image name in the detail title bar, show &amp;ldquo;Picture X of Y&amp;rdquo;, where Y is the total number of images and X is the selected picture&amp;rsquo;s position in the array.</description>
    </item>
    
    <item>
      <title>100 Days of Swift: Day 8</title>
      <link>https://uvolabs.me/posts/100-days/day-8/</link>
      <pubDate>Wed, 06 Mar 2019 20:00:41 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-8/</guid>
      <description>Day 8 was spent adding the final touches to Project 1 that I started yesterday. I added a new view controller to display the image which is switched to using instantiateViewController(withIdentifier:) method when one of the table view cells is tapped. I also made the navigation bar disappear when the image is tapped (see example below). The only other big change is making the title of the navigation bar large on the main view, but small on the detail view.</description>
    </item>
    
    <item>
      <title>100 Days of Swift: Days 6 &amp; 7</title>
      <link>https://uvolabs.me/posts/100-days/day-6-7/</link>
      <pubDate>Tue, 05 Mar 2019 20:05:25 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-6-7/</guid>
      <description>Day 6 was Swift Review, Day Three covering the topics of properties, static properties, methods, access control, closures, polymorphism, and typecasting. Like days 4 and 5, just reviewing swift fundamentals.
Day 7 marks the beginning of Project 1, a basic image viewing application. Fundamentally it shows a list of image names in a table view, and when the user taps on an image name it shows the image on a new screen.</description>
    </item>
    
    <item>
      <title>100 Days of Swift: Days 4 &amp; 5</title>
      <link>https://uvolabs.me/posts/100-days/day-4-5/</link>
      <pubDate>Sun, 03 Mar 2019 13:37:16 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-4-5/</guid>
      <description>Day 4: I didn&amp;rsquo;t post anything yesterday because it was a very simple review day. Nothing too heavy to really discuss in a blog post. I reviewed the nine topics listed on Hacking with Swift, Swift Review, Day One (variables and constants, data types, operators, string interpolation, arrays, dictionaries, conditionals, loops, and switch cases).
I followed that up with a non-Swift review of methods, information hiding, and scope. I believe it is very important to not only understand Swift, but also to have an understanding of the computer science fundamentals.</description>
    </item>
    
    <item>
      <title>100 Days of Swift: Day 3</title>
      <link>https://uvolabs.me/posts/100-days/day-3/</link>
      <pubDate>Fri, 01 Mar 2019 21:33:57 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-3/</guid>
      <description>Day 3 started out with a quick review of structs and classes, their properties and methods, access control, and optionals. It quickly turned into studying and taking detailed notes about protocols and extensions.
Review During my time learning Swift I took a deep intrest in the differences between classes and structs, so I fell deep into the rabbit hole early on in my journey to learn as much as I possibly could about them.</description>
    </item>
    
    <item>
      <title>100 Days of Swift: Day 2</title>
      <link>https://uvolabs.me/posts/100-days/day-2/</link>
      <pubDate>Thu, 28 Feb 2019 17:16:16 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-2/</guid>
      <description>Day 2 of 100: Started beefing up my knowledge on closures. Have always found this subject to be fairly bloated and nonintuitive, but I&amp;rsquo;m sure with enough practice it&amp;rsquo;ll become second nature.
Closures as Parameters Can&amp;rsquo;t say I&amp;rsquo;m too fond of the idea of using () -&amp;gt; Void in my code. It looks very&amp;hellip; nonSwifty. You&amp;rsquo;d think there would be a better syntax when your closure has no parameters or return values.</description>
    </item>
    
    <item>
      <title>100 Days of Swift: Day 1</title>
      <link>https://uvolabs.me/posts/100-days/day-1/</link>
      <pubDate>Wed, 27 Feb 2019 21:43:00 -0600</pubDate>
      
      <guid>https://uvolabs.me/posts/100-days/day-1/</guid>
      <description>Day 1 of The 100 Days of Swift Challenge Complete Gotta say I&amp;rsquo;m happily surprised by the amount of information I learned today.
I studied my knowledge of some of the core Swift fundamentals on Hacking With Swift, and learned some new stuff about CoreML in iOS 12.
Gonna keep on trucking and focus at least one hour a day for the next 99 days.</description>
    </item>
    
  </channel>
</rss>